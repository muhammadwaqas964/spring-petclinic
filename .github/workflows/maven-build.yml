# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          
          # Check for Git
          if ! command -v git &> /dev/null; then
            echo "Git is not installed. Installing..."
            sudo apt-get install -y git
          else
            echo "Git is already installed."
          fi

          # Check for Docker
          if ! command -v docker &> /dev/null; then
            echo "Docker is not installed. Installing..."
            sudo apt-get install -y docker.io
          else
            echo "Docker is already installed."
          fi

          # Check for Docker Compose
          if ! command -v docker-compose &> /dev/null; then
            echo "Docker Compose is not installed. Installing..."
            sudo apt-get install -y docker-compose
          else
            echo "Docker Compose is already installed."
          fi

          # Check for Maven
          if ! command -v mvn &> /dev/null; then
            echo "Maven is not installed. Installing..."
            sudo apt-get install -y maven
          else
            echo "Maven is already installed."
          fi

  build:
    runs-on: self-hosted
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build with Maven
        run: ./mvnw -B package

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy application
        env:
          DEPLOY_SERVER: '103.151.111.202'
          DEPLOY_PORT: '8080'
          DEPLOY_USER: 'deploy'  # Ensure this user has deployment permissions
        run: |
          echo "Deploying application to $DEPLOY_SERVER"
          scp -i /path/to/your/private/key target/*.jar $DEPLOY_USER@$DEPLOY_SERVER:/path/to/deploy/
          ssh -i /path/to/your/private/key $DEPLOY_USER@$DEPLOY_SERVER "java -jar /path/to/deploy/*.jar"

  test:
    runs-on: self-hosted
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check application URL
        run: |
          echo "Checking application URL"
          curl -s http://103.151.111.202:8080 || exit 1

      - name: Run tests
        run: ./mvnw test


